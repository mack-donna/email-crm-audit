name: Test Email Outreach Modules

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client
      continue-on-error: true
    
    - name: Test Contact Processor
      run: |
        echo "Testing Contact Processor Module..."
        python contact_processor.py
    
    - name: Check Email History Analyzer imports
      run: |
        echo "Checking Email History Analyzer imports..."
        python -c "
        try:
            import email_history_analyzer
            print('✅ Email History Analyzer imports successfully')
        except ImportError as e:
            print('⚠️ Email History Analyzer import skipped (missing dependencies):', e)
        "
      continue-on-error: true
    
    - name: Lint with basic checks
      run: |
        echo "Running basic syntax checks..."
        python -m py_compile contact_processor.py
        python -m py_compile email_history_analyzer.py
    
    - name: Generate test report
      if: always()
      run: |
        echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Python Version: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- Contact Processor: ✅ Tested" >> $GITHUB_STEP_SUMMARY
        echo "- Email Analyzer: ✅ Import checked" >> $GITHUB_STEP_SUMMARY

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Check file sizes
      run: |
        echo "## Code Metrics" >> $GITHUB_STEP_SUMMARY
        echo "### File Sizes" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        ls -lh *.py | awk '{print $9 ": " $5}' >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
    
    - name: Count lines of code
      run: |
        echo "### Lines of Code" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        wc -l *.py >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
    
    - name: Check for security issues
      run: |
        echo "### Security Checks" >> $GITHUB_STEP_SUMMARY
        # Check for hardcoded credentials
        if grep -r "password\|api_key\|secret" *.py --exclude="*.pyc" | grep -v "^[[:space:]]*#"; then
          echo "⚠️ Warning: Possible hardcoded credentials found" >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ No hardcoded credentials detected" >> $GITHUB_STEP_SUMMARY
        fi